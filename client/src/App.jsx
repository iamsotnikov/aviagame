import React, { useEffect, useState } from "react";
import { io } from "socket.io-client";

const socket = io("https://aviagame.onrender.com"); // –ê–¥—Ä–µ—Å —Ç–≤–æ–µ–≥–æ –±—ç–∫–µ–Ω–¥–∞

const App = () => {
  const [user, setUser] = useState(null);
  const [message, setMessage] = useState("");
  const [receivedMessage, setReceivedMessage] = useState("");

  useEffect(() => {
    console.log("window.Telegram:", window.Telegram);
    console.log("window.Telegram.WebApp:", window.Telegram?.WebApp);
    console.log("window.Telegram.WebApp.initDataUnsafe:", window.Telegram?.WebApp?.initDataUnsafe);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –æ–±—ä–µ–∫—Ç Telegram
    if (window.Telegram?.WebApp) {
      console.log("‚úÖ Telegram WebApp API –Ω–∞–π–¥–µ–Ω");
      const initDataUnsafe = window.Telegram.WebApp.initDataUnsafe;
      console.log("initDataUnsafe:", initDataUnsafe);

      if (initDataUnsafe?.user) {
        setUser(initDataUnsafe.user);
        console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", initDataUnsafe.user);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        socket.emit("telegram_auth", { initData: initDataUnsafe });
      } else {
        console.log("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ Telegram –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç");
      }
    } else {
      console.log("‚ùå Telegram WebApp API –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
    socket.on("message", (data) => {
      setReceivedMessage(data);
      console.log("üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
    });

    return () => {
      socket.disconnect();
    };
  }, []);

  const sendMessage = () => {
    if (message.trim()) {
      socket.emit("message", message);
      setMessage("");
    }
  };

  return (
    <div style={{ textAlign: "center", padding: "2rem" }}>
      <h1>Avia Game</h1>
      {user ? (
        <p>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</p>
      ) : (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram...</p>
      )}
      <input
        type="text"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
      />
      <button onClick={sendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
      {receivedMessage && <p>–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {receivedMessage}</p>}
    </div>
  );
};

export default App;
